@using PagedList.Mvc;
@model PagedList.IPagedList<DictionaryDto.WordDto>

<div class="body-header">
    <div class="row" style="padding: 0px; margin: 0px; margin-top: 10px;">
        <div class="col-lg-8 col-md-8 col-xs-8">
            <a href="/Home/Index" class="btn btn-danger">Home</a>
            <button class="btn btn-success"
                    name="btnWordModal"
                    data-toggle="modal"
                    data-target="#wordModal"
                    data-wordmodel="@Json.Encode(new DictionaryDto.WordDto())"
                    data-backdrop="static"
                    data-keyboard="false">
                Add Word
            </button>
        </div>
        <div class="col-lg-4 col-md-4 col-xs-4">
            @using (Html.BeginForm("WordList", "Word", FormMethod.Get))
            {
                <div class="col-lg-4 col-md-4 col-xs-4" style="text-align: right;">
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
                <div class="col-lg-8 col-md-8 col-xs-8" style="padding: 0px;">
                    <input type="text" class="form-control" name="textSearch" value="@ViewBag.TextSearch" />
                </div>
            }
        </div>
    </div>
</div>
<div class="body-content">
    @{
        if (Model.Count > 0)
        {
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th style="width:30%">Word</th>
                        <th style="width:10%">Type</th>
                        <th style="width:25%">Pronounce</th>
                        <th style="width:15%">Sound</th>
                        <th style="width:20%">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int index = 0; index < Model.Count; index++)
                    {
                        <tr>
                            <th class="text-body-table">@Model.ElementAt(index).WordText</th>
                            <th class="text-body-table">@Model.ElementAt(index).TypeWordText</th>
                            <th class="text-body-table">/@Model.ElementAt(index).Pronounce/</th>
                            <th class="text-body-table">
                                @if (Model.ElementAt(index).Sound != null && Model.ElementAt(index).Sound.Length > 0)
                                {
                                    <button class="btn btn-default" onclick="playSound('@Model.ElementAt(index).WordId')">Play</button>
                                    <audio controls id="@Model.ElementAt(index).WordId" hidden>
                                        <source src="@Model.ElementAt(index).Sound" type="audio/mpeg" />
                                    </audio>
                                }
                            </th>
                            <th class="text-body-table">
                                <a href="/Admin/Word/Index?wordId=@Model.ElementAt(index).WordId"
                                    target="_blank"
                                    class="btn btn-info">
                                    Detail
                                </a>
                                <button class="btn btn-primary"
                                        name="btnWordModal"
                                        data-toggle="modal"
                                        data-target="#wordModal"
                                        data-wordmodel="@Json.Encode(Model.ElementAt(index))"
                                        data-backdrop="static"
                                        data-keyboard="false">
                                    Edit
                                </button>
                                <a href="/Admin/Word/DeleteWord?wordId=@Model.ElementAt(index).WordId"
                                    onclick="return confirm('Are you sure ?')"
                                    class="btn btn-danger">
                                    Delete
                                </a>
                            </th>
                        </tr>
                    }
                </tbody>
            </table>
            @Html.PagedListPager(Model, pageNumber => Url.Action("WordList", "Word", new { pageNumber, @textSearch = @ViewBag.TextSearch }))
        }
        else
        {
            <h3>No Result.</h3>
        }
    }
</div>

@{ Html.RenderPartial("~/Areas/Admin/Views/Word/_WordModal.cshtml"); }

<script>
    $(document).on("click", "button[name='btnWordModal']", function () {
        var wordModel = $(this).data('wordmodel');
        $("#wordModal input[name='WordId']").val(wordModel.WordId);
        $("#wordModal input[name='WordText']").val(wordModel.WordText);
        $("#wordModal option[value='" + wordModel.TypeWordId + "']").attr("selected", "selected");
        $("#wordModal input[name='Pronounce']").val(wordModel.Pronounce);
        $("#wordModal input[name='Sound']").val(wordModel.Sound);
    });
</script>
