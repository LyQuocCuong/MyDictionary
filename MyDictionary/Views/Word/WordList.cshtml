@using PagedList.Mvc;
@model PagedList.IPagedList<DictionaryDto.WordDto>

@{
    <div class="body-header">
        <div class="row" style="padding: 0px; margin: 0px; margin-top: 10px;">
            <div class="col-lg-8 col-md-8 col-xs-8">
                <a href="/Home/Index" class="btn btn-danger">Home</a>
                <span class="text-title">WORD LIST</span>
            </div>
            <div class="col-lg-4 col-md-4 col-xs-4">
                @using (Html.BeginForm("WordList", "Word", FormMethod.Get))
                {
                    <div class="col-lg-4 col-md-4 col-xs-4" style="text-align: right;">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                    <div class="col-lg-8 col-md-8 col-xs-8" style="padding: 0px;">
                        <input type="text" class="form-control" name="textSearch" value="@ViewBag.TextSearch" />
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="body-content">
        @if (Model.Count > 0)
        {
            <table class="table table-hover" style="margin-bottom:0px;">
                <thead>
                    <tr>
                        <th style="width:40%">Word</th>
                        <th style="width:10%">Type</th>
                        <th style="width:25%">Pronounce</th>
                        <th style="width:20%">Sound</th>
                        <th style="width:5%">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int index = 0; index < Model.Count; index++)
                    {
                        <tr>
                            <th class="text-body-table">@Model.ElementAt(index).WordText</th>
                            <th class="text-body-table">@Model.ElementAt(index).TypeWordText</th>
                            <th class="text-body-table">/@Model.ElementAt(index).Pronounce/</th>
                            <th class="text-body-table">
                                @if (Model.ElementAt(index).Sound != null && Model.ElementAt(index).Sound.Length > 0)
                                {
                                    <button class="btn btn-default" onclick="playSound('@Model.ElementAt(index).WordId')">Play</button>
                                    <audio controls id="@Model.ElementAt(index).WordId" hidden>
                                        <source src="@Model.ElementAt(index).Sound" type="audio/mpeg" />
                                    </audio>
                                }
                            </th>
                            <th class="text-body-table">
                                <a href="/Word/Index?wordId=@Model.ElementAt(index).WordId"
                                   target="_blank"
                                   class="btn btn-info">
                                    Detail
                                </a>
                            </th>
                        </tr>
                    }
                </tbody>
            </table>
            @Html.PagedListPager(Model, pageNumber => Url.Action("WordList", "Word", new { pageNumber, @textSearch = @ViewBag.TextSearch }))
        }
        else
        {
            <h3>No Result.</h3>
        }
    </div>
}
